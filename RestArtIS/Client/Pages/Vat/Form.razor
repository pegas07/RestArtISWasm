<EditForm Model="@vat" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <MudCard Class="ma-2 pa-1">
        <MudTextField Label="Název" @bind-Value="@vat.Name" For="@(() => vat.Name)" Required="true" RequiredError="Název je povinná položka" />
        <MudTextField Label="Aktuální sazba" @bind-Value="@rate" For="@(() => rate)" ReadOnly="true" />

        <MudButton OnClick="@CreateNewRate" >Nová sazba</MudButton>
        <MudTable Items="vat.VatHistories">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Historie sazeb</MudText>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Datum od</MudTh>
                <MudTh>Datum do</MudTh>
                <MudTh>Sazba</MudTh>
            </HeaderContent>
            <RowTemplate Context="rowContext">
                <MudTd DataLabel="Datum od">@rowContext.ValidFrom</MudTd>
                <MudTd DataLabel="Datum do">@rowContext.ValidTo</MudTd>
                <MudTd DataLabel="Sazba">@rowContext.Rate</MudTd>
            </RowTemplate>
        </MudTable>

        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit">@ButtonText</MudButton>
            <MudButton OnClick="Cancel">Storno</MudButton>
        </MudCardActions>
    </MudCard>

    

    <MatDialog @bind-IsOpen="@IsNewRateDialog">
        <MatDialogTitle>@($"Nová hodota sazby DPH {vat.Name}")</MatDialogTitle>
        <MatDialogContent>
            <div>
                <MatTextField Label="Sazba" @bind-Value="@NewRate" /> %
                <MatDatePicker Label="Platná od"@bind-Value="@NewDateFrom" AllowInput="false" Minimum="@(DateTime.Now)" />
            </div>
        </MatDialogContent>
        <MatDialogActions>
            <MatButton type="button" OnClick="@SaveNewRate" >Uložit</MatButton>
            <MatButton type="button" OnClick="@(e => { IsNewRateDialog = false; })">Storno</MatButton>
        </MatDialogActions>
    </MatDialog>
</EditForm>
@code {
    [Parameter] public Vat vat { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Uložit";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public EventCallback OnValidCancel { get; set; }

    private bool IsNewRateDialog { get; set; }
    private int NewRate { get; set; }
    private DateTime NewDateFrom { get; set; }

    private string rate
    {
        get => $"{vat.ActualRate} %";
        set {}
    }
    void Cancel()
    {
        OnValidCancel.InvokeAsync();
    }
    void CreateNewRate()
    {
        NewRate = 0;
        NewDateFrom = DateTime.Now;
        IsNewRateDialog = true;
    }

    void SaveNewRate()
    {
        if (vat.VatHistories == null)
            vat.VatHistories = new List<VatHistory>();
        if (vat.VatHistories != null /*&& vat.VatHistories.Any(h => h.ValidTo >= NewDateFrom || h.ValidTo == null)*/)
            vat.VatHistories?.Where(h => h.ValidTo >= NewDateFrom || h.ValidTo == null).ToList()?.ForEach(i => i.ValidTo = NewDateFrom);
        vat.VatHistories.Add(new VatHistory { ValidFrom = NewDateFrom, Rate = NewRate, Vat = vat, VatId = vat.Id });

        IsNewRateDialog = false;
    }
}