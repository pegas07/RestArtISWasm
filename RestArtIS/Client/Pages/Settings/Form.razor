@page "/settings"
@inject HttpClient client
@inject NavigationManager uriHelper
@inject IJSRuntime js


<style>
    form .row {
        margin-bottom: 16px;
    }
</style>

<h3>Nastavení</h3>

@if (settings == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@settings" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <MudCard Class="ma-2 pa-1">
            <MudTextField Label="Název" @bind-Value="@settings.Name" For="@(() => settings.Name)" Required="true" RequiredError="Název je povinná položka" />
            <MudTextField Label="Email" @bind-Value="@settings.Email" For="@(() => settings.Email)" Required="true" RequiredError="Email je povinná položka" />
            <MudTextField Label="Tel" @bind-Value="@settings.Phone" For="@(() => settings.Phone)" Required="true" RequiredError="Telefon je povinná položka" />
            <MudTextField Label="IČO" @bind-Value="@settings.ICO" For="@(() => settings.ICO)" Required="true" RequiredError="IČO je povinná položka" />
            <MudTextField Label="DIČ" @bind-Value="@settings.DIC" For="@(() => settings.DIC)" Required="true" RequiredError="DIČ je povinná položka" />
                
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Adresy</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudSwitch Label="Dodací adresa stejná jako fakturační" Color="Color.Primary" @bind-Checked="@settings.MailingAddressSameAsBillingAddress" />
                    </CardHeaderActions>                   
                </MudCardHeader>
                <MudCardContent>
                    <div>
                        <MudCard Class="d-inline">asds</MudCard>
                        <MudCard Class="d-inline"eeee></MudCard>
                    </div>
                    <MudText>This day everything happend.</MudText>
                </MudCardContent>
            </MudCard>                            
        </MudCard>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit">Uložit</MudButton>
            <MudButton OnClick="@Cancel">Storno</MudButton>
        </MudCardActions>
    </EditForm>    
}

@code {
    Settings settings { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var s = await client.GetFromJsonAsync<Settings[]>("api/settings");
        settings = s.FirstOrDefault();
    }
    
    async Task Submit()
    {
        await client.PutAsJsonAsync("api/settings", settings);
    }

    async Task Cancel()
    {
        var s = await client.GetFromJsonAsync<Settings[]>("api/settings");
        settings = s.FirstOrDefault();
    }
}
